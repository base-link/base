import { BlueNodeType, Mesh, SiteModuleBindingInputType, SiteObjectWatcherHandleType, SiteObjectWatcherPropertyType, SiteObjectWatcherSchemaPropertyType, SiteObjectWatcherSchemaType, SiteObjectWatcherType, SiteObserverState } from '~';
import type { SiteProcessInputType } from '~';
export declare function bindSchema(input: SiteModuleBindingInputType, schema: SiteObjectWatcherSchemaType): void;
export declare function createCodeModuleObjectNameObserverSchema(property: string, handle: SiteObjectWatcherHandleType): SiteObjectWatcherSchemaType;
export declare function createCodeModulePublicCollectionObserverSchema(property: string, handle: SiteObjectWatcherHandleType): SiteObjectWatcherSchemaType;
export declare function createWatcherFromSchema(schema: SiteObjectWatcherSchemaType): SiteObjectWatcherType;
export declare function createWatcherFromSchemaProperty(property: SiteObjectWatcherSchemaPropertyType, name: string, parent?: SiteObjectWatcherPropertyType, pending?: number): SiteObjectWatcherPropertyType;
export declare function extendDynamicPropertyWatcher(input: SiteProcessInputType, watcher: SiteObjectWatcherPropertyType, name: string): SiteObjectWatcherPropertyType;
export declare function isObserverStateAccepted(input: SiteObserverState, potential: Array<SiteObserverState>): boolean;
export declare function propagatePendingUpwards(property: SiteObjectWatcherPropertyType, amount: number): void;
export declare function queuePropertyUpdateHandle(input: SiteProcessInputType, handle: SiteObjectWatcherHandleType, node: BlueNodeType<Mesh>): void;
export declare function registerSchema(input: SiteModuleBindingInputType, schema: SiteObjectWatcherSchemaType): SiteObjectWatcherType;
export declare function resolveBluePath(blue: BlueNodeType<Mesh>): Array<BlueNodeType<Mesh>>;
export declare function triggerObjectBindingUpdate(input: SiteProcessInputType, node: BlueNodeType<Mesh>): void;
export declare function updateAllThroughWatcher(input: SiteModuleBindingInputType, watcher: SiteObjectWatcherType): void;
export declare function updateAllThroughWatcherProperty(input: SiteModuleBindingInputType, property: SiteObjectWatcherPropertyType, node: Record<string, unknown>): void;
export declare function updateWatcherForPath(input: SiteProcessInputType, watcher: SiteObjectWatcherType, path: Array<BlueNodeType<Mesh>>): void;
